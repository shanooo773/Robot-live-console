version: '3.8'

services:
  # Backend API Service
  backend:
    build:
      context: ./app/backend
      dockerfile: Dockerfile
    container_name: robot-console-backend
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    environment:
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000,http://localhost:5173,http://localhost:8080}
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      - PRODUCTION_MODE=true
    volumes:
      - ./app/backend/videos:/app/videos
      - ./app/backend/temp:/app/temp
      - ./app/backend/logs:/app/logs
      - backend_db:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - robot-console-network

  # Frontend Service
  frontend:
    build:
      context: ./app/frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=http://localhost:${BACKEND_PORT:-8000}
    container_name: robot-console-frontend
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - robot-console-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: robot-console-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - robot-console-network

  # Gazebo Simulation Service (Optional)
  gazebo:
    build:
      context: ./docker
      dockerfile: Dockerfile
    container_name: gazebo-vnc-gui
    ports:
      - "8080:8080"  # NoVNC web interface
      - "5901:5901"  # VNC server
    volumes:
      # Mount local volume for Gazebo worlds/models
      - ./docker/robots/worlds:/opt/simulation/robots/worlds
      - ./docker/robots:/opt/simulation/robots
      # Optional: Mount custom world files from host
      - ./custom_worlds:/opt/simulation/custom_worlds:ro
    environment:
      - DISPLAY=:1
      - VNC_PASSWORD=gazebo
      - LIBGL_ALWAYS_SOFTWARE=1
      - GALLIUM_DRIVER=llvmpipe
    restart: unless-stopped
    # Increase shared memory for GUI applications
    shm_size: 1g
    # Security options for GUI applications
    security_opt:
      - seccomp:unconfined
    # Capabilities needed for VNC/X11
    cap_add:
      - SYS_ADMIN
    stdin_open: true
    tty: true
    networks:
      - robot-console-network

volumes:
  backend_db:
    driver: local
  nginx_logs:
    driver: local

networks:
  robot-console-network:
    driver: bridge